{% extends 'management/view/layout/base.njk' %}

{% block body %}
    <div class="level-left">
        <div class="level-item">
            <h1 class="title is-1">
                {{"Edit a brand with ID: " + brand.id if brand.id else "New brand"}}
            </h1>
        </div>
        <div class="level-item">
            <span>
                <a class="button is-link is-light" href="/admin/brand">Cancel</a>
            </span>
        </div>
    </div>

    <hr/>

    <form action="/admin/brand/save" method="POST" enctype="multipart/form-data">
        <input type="hidden" name="id" value="{{brand.id}}" readonly/>

        <div class="field">
            <label class="label">Name</label>
            <div class="control has-icons-left">
                <input class="input" type="text" name="name" placeholder="The Coca-Cola Company" value="{{brand.name}}" required/>
                <span class="icon is-small is-left">
                    <i class="fas fa-user"></i>
                </span>
            </div>
        </div>

        <div class="field">
            <label class="label">Logo</label>
            {% if brand.logo %}
                <img src="data:image/png;base64, {{ brand.logo }}" width="128" height="128" alt="Brand Logo"/>
            {% endif %}
            <div class="control has-icons-left">
                <input class="input" type="file" name="file" {{"" if brand.logo else "required"}}/>
                <span class=" icon is-small is-left">
                    <i class="fas fa-image"></i>
                </span>
            </div>
        </div>

        <label class="label">Discounts</label>
        <div class="field">
            <div class="control">
            <input name='discounts' placeholder='discounts'/>
            </div>
        </div>

        <input type="submit" class="button is-success" value="Save changes"/>

        <hr/>
    </form>
{% endblock %}

{% block footerScripts%}
  <script>
    const currentDiscounts = {{ brand.discounts | dump | safe }};
    const discounts = {{ discounts | dump | safe }};

    const cleanDiscounts = discounts.map(({ id, value, type }) => ({
      id,
      value: id,
      discountValue: value,
      type,
    }));
    const cleanCurrentDiscounts = currentDiscounts.map(({ id, value, type }) => ({
      id,
      value: id,
      discountValue: value,
      type,
    }));

    const input2 = document.querySelector('input[name=discounts]'),
      discountsTagify = new Tagify(input2, {
        enforceWhitelist: true,
        delimiters: null,
        templates: {
          tag: function (tagData) {
            const valueText =
              tagData.type === 'Fixed' ? `$${tagData.discountValue}` : `${tagData.discountValue}%`;
            try {
              return `<tag title='${tagData.id}' contenteditable='false' spellcheck="false" class='tagify__tag ${tagData.class ? tagData.class : ''}' ${this.getAttributes(tagData)}>
                        <x title='remove tag' class='tagify__tag__removeBtn'></x>
                        <div>
                          <span class='tagify__tag-text'>${valueText} Off</span>
                        </div>
                      </tag>`;
            } catch (err) {}
          },

          dropdownItem: function (tagData) {
            const valueText =
              tagData.type === 'Fixed' ? `$${tagData.discountValue}` : `${tagData.discountValue}%`;
            try {
              return `<div class='tagify__dropdown__item ${tagData.class ? tagData.class : ''}' tagifySuggestionIdx="${tagData.tagifySuggestionIdx}">
                        <span>${valueText} Off</span>
                      </div>`;
            } catch (err) {}
          },
        },
        whitelist: cleanDiscounts,
        dropdown: {
          enabled: 1,
          classname: 'extra-properties',
          searchKeys: ['value', 'type'],
        },
      });

    discountsTagify.addTags(cleanCurrentDiscounts);
  </script>
{% endblock %}

